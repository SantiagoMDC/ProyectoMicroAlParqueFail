// <auto-generated />
using Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Datos.Migrations
{
    [DbContext(typeof(PersonasContext))]
    partial class PersonasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.Persona", b =>
                {
                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Actitud1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Actitud2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Actitud3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Actitud5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Actitud6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActitudExplicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conocimiento1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conocimiento2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conocimiento3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conocimiento4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conocimiento5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConocimientoExplicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("EstadoCivil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelEducativo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaisDeProcedencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Practica1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Practica2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Practica3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Practica4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identificacion");

                    b.ToTable("personas");
                });

            modelBuilder.Entity("Entity.Restaurante", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("restaurantes");
                });
#pragma warning restore 612, 618
        }
    }
}
